% This is a comment. Comments begin with a '%' and extends to the end of line.

% Global variables defining the sizes:
numeric size, hsize;
% Now we begin defining 'V'. Each glyph has a corresponding string description,
% a horizontal size, vertical size and depth. (when you want do draw below
% the baseline)
beginchar("V", hsize, size, 0);
  % Pair variables can be used to describe points in 2D space:
  pair z1, z2, z3, z4, z5;
  % Numeric variables are floating-point values:
  numeric pen_width, pen_height;
  % Initializing one of the variables. In a glyph definition, we
  % can use an implicit variable 'h', which is our glyph height:
  pen_height = 0.09*h;
  % Initializing other variable:
  pen_width = 0.9*pen_height;
  % Before drawing, we need to pick up a pen. Here we use a pen called
  % 'pencircle', which is a circle of 1 pixel. As this is too small, we
  % scale it in coordinates 'x' and 'y' to the desired size:
  pickup pencircle yscaled pen_height xscaled pen_width;
  % Our point 'z1' is defined as the position of our pen, if we place
  % it immediately to the left (lft) and on bottom (bot) of point (0,h).
  % Where 'h' is our glyph height.
  z1 = bot rt (0, h);
  % Our point 'z2' is defined as the position of our pen, if we place
  % it immediately to the right (rt) of point (0,0.25*h).
  % Where 'h' is our glyph height.
  z2 = rt (0, 0.25*h);
  % Our point 'z3' is defined as the position of our pen, if we place
  % it immediately on the top of point (0.5*w,0).
  % Where 'w' is our glyph width.
  z3 = top (0.5*w, 0);
  % Our point 'z4' is defined as the position of our pen, if we place
  % it immediately to the left (lft) of point (w,0.25*h).
  % Where 'w' is our glyph width and 'h' is our glyph height.
  z4 = lft (w, 0.25*h);
  % Our point 'z4' is defined as the position of our pen, if we place
  % it immediately to the left (lft) and on bottom (bot) of point (w,h).
  % Where 'w' is our glyph width and 'h' is our glyph height.  
  z5 = bot lft (w, h);
  % After describing our pen and all the points, we draw our 'V':
  draw z1--z2--z3--z4--z5;
endchar;
